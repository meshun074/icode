package com.fdmgroup.icode.library.movies;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Repository;

@Repository
public class MovieRepository {
	

    private List<Movie> movieList = new ArrayList<>();
    
    public MovieRepository(@Qualifier("starterMoviesList")List<Movie> starterMovieList) {
    	super();
    	this.movieList = starterMovieList;
    }
  
    
    public List<Movie> findAll(){
    	return null;
    }
    

    public Movie save(Movie movie) {
        /*
         * Create an object to capture the data passed in as arguments.
         * The movie id should be set and generated by using the generateUniqueId method
         * Save the movie to the library movie catalog
         * Return the movie that was saved
         */
        return null;
    }
    
	public Movie searchMovieById(Long id) {
        /*
         * Search for a movie by id in the library movie catalog
         * -use iteration (for loop) to search for a movie by id
         *          Or
         * -use stream to search for a movie by id
         * Return the movie or null if the movie is not found
         */
        return null;
	}
	
    public Movie updateMovieDescription(Long id, String description) {
        /*
         * Search for a movie by id in the library movie catalog and update the movie description
         * -use iteration (for loop) to search for a movie by id
         *         Or
         * -use stream to search for a movie by id
         * Return the updated movie or null if the movie is not found
         */
        return null; 
    }
	


    public List<Movie> searchByDirector(String director) {
        /*
         * Search for a movie by director in the library movie catalog
         * -use iteration (for loop) to search for a movie by director
         *        Or
         * -use stream to search for a movie by director
         * Return the list of movies that contains the director
         * Return an empty list if no movie is found
         */
        return null;

    }


    public List<Movie> searchByTitle(String title) {
        /*
         * Search for a movie by title in the library movie catalog
         * -use iteration (for loop) to search for a movie by title
         *      Or
         * -use stream to search for a movie by title
         * Return the list of movies that contains the title
         * Return an empty list if no movie is found
         */
        return null;
    }


    public List<Movie> searchByGenre(Genre genre) {
        /*
         * Search for a movie by genre in the library movie catalog
         * -use iteration (for loop) to search for a movie by genre
         *     Or
         * -use stream to search for a movie by genre
         * Return the list of movies that contains the genre
         * Return an empty list if no movie is found
         */
        return null;
    }


    public void deleteMovieById(Long movieId) {
        /*
         * Search for a movie by id in the library movie catalog and delete the movie
         * -use iteration (for loop) to search for a movie by id
         *        Or
         * -use stream to search for a movie by id
         * this method does not return anything (Dangerous method! Handle with care!)
         */
    }






    



	

}
